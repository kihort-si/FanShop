name: Release Workflow

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest release tag
        id: get_latest_release
        run: |
          $latest_release_tag = (Invoke-RestMethod "https://api.github.com/repos/${{ github.repository }}/releases/latest").tag_name
          echo "Latest release tag: $latest_release_tag"
          echo "latest_release_tag=$latest_release_tag" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Get version from AssemblyInfo.cs
        id: get_assembly_version
        run: |
          $version = Select-String -Path AssemblyInfo.cs -Pattern '\[assembly: AssemblyVersion\("([^"]+)"\)\]' | ForEach-Object { $_.Matches[0].Groups[1].Value }
          echo "Assembly version: $version"
          echo "assembly_version=$version" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Compare versions
        id: compare_versions
        run: |
          $verA = $env:assembly_version
          $verB = $env:latest_release_tag
          if ($verB.StartsWith('v')) {
            $verB = $verB.Substring(1)
          }
          if (([Version]$verA) -le ([Version]$verB)) {
            Write-Host "Assembly version is not greater than the latest release tag. Exiting..."
            exit 1
          }
          Write-Host "Assembly version is greater than the latest release tag."

      - name: Build project
        run: |
          dotnet build --configuration Release

      - name: Run program
        run: |
          dotnet run --configuration Release

      - name: Archive Release files
        run: |
          $archive_name = "FanShop$env:assembly_version.zip"
          Compress-Archive -Path .\bin\Release\* -DestinationPath $archive_name
          echo "Archive name: $archive_name"
          echo "archive_name=$archive_name" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Create a new release and upload the archive
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.archive_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}